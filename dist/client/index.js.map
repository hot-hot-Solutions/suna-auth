{"version":3,"sources":["../../src/client/index.ts"],"names":[],"mappings":";;;;;;;AAIA,OAAO,WAAW;AAElB,SAAsB,OACpB,UACA,QACA;AAAA;AATF;AAUE,UAAM,EAAC,MAAM,aAAY,IAAI,MAAM,MAAM,IAEvC,oBAAoB;AAAA,MACpB,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,SAAS,mBACJ;AAAA,MAEL,gBAAgB,MAAM;AAAA,IACxB,CAAC;AAED,QAAI,OAAO,UAAU;AACnB,YAAM,MAAM,kCAAkC;AAGhD,QAAI,CAAC,aAAa,SAAS;AACzB,aAAO;AAAA,IACT,YAAW,kBAAa,SAAb,mBAAmB,KAAK;AACjC,aAAO,SAAS,OAAO,aAAa,KAAK;AACzC,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAEA,SAAsB,UAAU;AAAA;AAC9B,UAAM,MAAM,mBAAmB;AAE/B,QAAI,OAAO,WAAW,aAAa;AACjC,aAAO,SAAS,OAAO;AAAA,IACzB,OAAO;AACL,YAAM,IAAI,MAAM,oDAAoD;AAAA,IACtE;AAAA,EACF;AAAA","sourcesContent":["\"use client\";\r\n\r\nimport {Auth} from \"../index\";\r\nimport {ErrorResult, JsonResult, SignInConfig} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport async function signIn(\r\n  provider: keyof typeof Auth.config,\r\n  config?: SignInConfig,\r\n) {\r\n  const {data: oauthUrlJson} = await axios.get<\r\n    JsonResult<{ url: string }> | ErrorResult\r\n  >(\"/api/auth/signIn\", {\r\n    params: {\r\n      provider: provider,\r\n    },\r\n    headers: {\r\n      ...config,\r\n    },\r\n    validateStatus: () => true,\r\n  });\r\n\r\n  if (typeof window == \"undefined\")\r\n    throw Error(\"signin should be ran client side\");\r\n\r\n  // Navigate to the URL\r\n  if (!oauthUrlJson.success) {\r\n    return oauthUrlJson;\r\n  } else if (oauthUrlJson.data?.url) {\r\n    window.location.href = oauthUrlJson.data.url;\r\n    return false;\r\n  } else {\r\n    return oauthUrlJson;\r\n  }\r\n}\r\n\r\nexport async function signOut() {\r\n  await fetch(`/api/auth/signOut`);\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    window.location.reload();\r\n  } else {\r\n    throw new Error(\"This function can only be used on the client-side.\");\r\n  }\r\n}\r\n"]}